{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","target","prevParams","role","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89c70bdc.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst ACTIONS = {\n  MAKE_REQUEST: \"make-request\",\n  GET_DATA: \"get-data\",\n  ERROR: \"error\",\n  UPDATE_HAS_NEXT_PAGE: \"update-has-next-page\",\n};\n\nconst BASE_URL = \"https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: [],\n      };\n    case ACTIONS.GET_DATA:\n      return {\n        ...state,\n        loading: false,\n        jobs: action.payload.jobs,\n      };\n    case ACTIONS.ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: [],\n      };\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return {\n        ...state,\n        hasNextPage: action.payload.hasNextPage,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: {\n          markdown: true,\n          page: page,\n          ...params,\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: ACTIONS.GET_DATA,\n          payload: { jobs: res.data },\n        });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n\n    const cancelToken2 = axios.CancelToken.source();\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken2.token,\n        params: {\n          markdown: true,\n          page: page + 1,\n          ...params,\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n          payload: {\n            hasNextPage: res.data.length !== 0,\n          },\n        });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({\n          type: ACTIONS.ERROR,\n          payload: { error: e },\n        });\n      });\n\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n\n  return state;\n}\n","import React, { useState } from \"react\";\nimport { Card, Badge, Button, Collapse } from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport default function Job({ job }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <Card.Title>\n              {job.title} -{\" \"}\n              <span className=\"text-muted font-weight-light\">\n                {job.company}\n              </span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"secondary\" className=\"mr-2\">\n              {job.type}\n            </Badge>\n            <Badge variant=\"secondary\">{job.location}</Badge>\n            <div style={{ wordBreak: \"break-all\" }}>\n              <ReactMarkdown source={job.how_to_apply} />\n            </div>\n          </div>\n          <img\n            className=\"d-none d-md-block\"\n            height=\"50\"\n            alt={job.company}\n            src={job.company_logo}\n          />\n        </div>\n        <Card.Text>\n          <Button\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n            variant=\"primary\"\n          >\n            {open ? \"Hide Details\" : \"View Details\"}\n          </Button>\n        </Card.Text>\n        <Collapse in={open}>\n          <div className=\"mt-4\">\n            <ReactMarkdown source={job.description} />\n          </div>\n        </Collapse>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\n  function adjustPage(amount) {\n    setPage((prevPage) => prevPage + amount);\n  }\n\n  return (\n    <Pagination>\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n      {page !== 1 && (\n        <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\n      )}\n      {page > 2 && <Pagination.Ellipsis />}\n      {page > 2 && (\n        <Pagination.Item onClick={() => adjustPage(-1)}>\n          {page - 1}\n        </Pagination.Item>\n      )}\n      <Pagination.Item active>{page}</Pagination.Item>\n      {hasNextPage && (\n        <Pagination.Item onClick={() => adjustPage(1)}>\n          {page + 1}\n        </Pagination.Item>\n      )}\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n    </Pagination>\n  );\n}\n","import React from \"react\";\nimport { Form, Col } from \"react-bootstrap\";\n\nexport default function SearchForm({ params, onParamChange }) {\n  return (\n    <Form className=\"mb-4\">\n      <Form.Row className=\"align-items-end\">\n        <Form.Group as={Col}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.description}\n            name=\"description\"\n            type=\"text\"\n          />\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Location</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.location}\n            name=\"location\"\n            type=\"text\"\n          />\n        </Form.Group>\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n          <Form.Check\n            onChange={onParamChange}\n            value={params.full_time}\n            name=\"full_time\"\n            id=\"full-time\"\n            label=\"Only Full Time\"\n            type=\"checkbox\"\n            className=\"mb-2\"\n          />\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport useFetchJobs from \"./useFetchJobs\";\nimport { Container } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport JobsPagination from \"./JobsPagination\";\nimport SearchForm from \"./SearchForm\";\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n    setParams((prevParams) => {\n      return { ...prevParams, [param]: value };\n    });\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">GitHub Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && (\n        <div className=\"spinner-border text-primary mb-4 mt-4\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      )}\n      {error && <h1>Error. Try Refreshing.</h1>}\n      {jobs.map((job) => {\n        return <Job key={job.id} job={job} />;\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}